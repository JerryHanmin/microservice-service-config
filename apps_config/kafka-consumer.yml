eureka:
  instance:
    virtualHostName: ${spring.application.name}
    appGroupName: ${service.groupName}
    preferIpAddress: true
    metadataMap:
      instanceId: ${spring.application.name}:${server.port}
  client:
    region: default
    registryFetchIntervalSeconds: 5
    availabilityZones:
      default: ${APPLICATION_DOMAIN:${DOMAIN:defaultZone}}
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${service.eureka.hostname}:${service.eureka.port}/discovery/eureka/
    
#kafka Consumer config
#topic format -> kafka.{Producer}.{Consumer}.topic={eventName}
kafka:
  group:
    id: kafka-sample-group
  zookeeper:
    connect: ${service.zookeeper.hostname}:${service.zookeeper.port}
    session:
      timeout:
        ms: 14000
    sync:
      time:
        ms: 200
  auto:
    commit:
      interval:
        ms: 1000
    offset:
      reset: smallest
  consumer:
    thread: 5
  topic:
    sample: 
      test: kafka-sample-message

#elasticsearch server
elasticsearch:
  clusterName: ${service.elasticsearch.clusterName}
  host: ${service.elasticsearch.hostname}
  port: ${service.elasticsearch.port}
  sniff: true
  ignore_cluster_name: false
  ping_timeout: 20s
  nodes_sampler_interval: 20s
